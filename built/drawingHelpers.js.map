{"version":3,"file":"drawingHelpers.js","sourceRoot":"","sources":["../src/drawingHelpers.ts"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAC9B;;;GAGG;AACH,SAAS,eAAe,CAAC,IAAI,GAAG,EAAE,EAAE,SAAS,GAAG,MAAM;IACpD,gBAAgB;IAChB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAA;IAC/C,MAAM,CAAC,KAAK,GAAG,IAAI,CAAA;IACnB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAA;IACpB,cAAc;IACd,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;IACvC,cAAc;IACd,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,CAAA;IACxB,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,CAAA;IACxB,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,CAAA;IACvB,IAAI,OAAO,EAAE,CAAC;QACZ,OAAO,CAAC,SAAS,EAAE,CAAA;QACnB,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;QAC5D,OAAO,CAAC,SAAS,GAAG,SAAgB,CAAA;QACpC,OAAO,CAAC,IAAI,EAAE,CAAA;IAChB,CAAC;IACD,OAAO,MAAM,CAAA;AACf,CAAC;AAED,SAAS,OAAO,CACd,cAAsB,EACtB,cAAsB,EACtB,cAAsB,EACtB,KAAkB;IAElB,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,WAAW,CACvC,CAAC,GAAG,cAAc,EAClB,CAAC,GAAG,cAAc,EAClB,CAAC,GAAG,cAAc,CACnB,CAAA;IACD,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC;QAC9C,KAAK,EAAE,QAAQ;QACf,SAAS,EAAE,IAAI;QACf,OAAO,EAAE,GAAG;KACb,CAAC,CAAA;IACF,+BAA+B;IAC/B,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAA;IACxD,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;IAClB,OAAO,OAAO,CAAA;AAChB,CAAC;AAED,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,CAAA","sourcesContent":["'use strict'\n\nimport * as THREE from 'three'\n/**\n * Draw a circle in the center of the canvas.\n * Credit: http://jsfiddle.net/7yDGy/1/\n */\nfunction generateTexture(size = 32, fillStyle = '#fff'): HTMLCanvasElement {\n  // create canvas\n  const canvas = document.createElement('canvas')\n  canvas.width = size\n  canvas.height = size\n  // get context\n  const context = canvas.getContext('2d')\n  // draw circle\n  const centerX = size / 2\n  const centerY = size / 2\n  const radius = size / 2\n  if (context) {\n    context.beginPath()\n    context.arc(centerX, centerY, radius, 0, 2 * Math.PI, false)\n    context.fillStyle = fillStyle as any\n    context.fill()\n  }\n  return canvas\n}\n\nfunction drawBox(\n  spaceBoundaryX: number,\n  spaceBoundaryY: number,\n  spaceBoundaryZ: number,\n  scene: THREE.Scene\n): THREE.Mesh {\n  const boxGeometry = new THREE.BoxGeometry(\n    2 * spaceBoundaryX,\n    2 * spaceBoundaryY,\n    2 * spaceBoundaryZ\n  )\n  const boxMaterial = new THREE.MeshBasicMaterial({\n    color: 0xaaaaaa,\n    wireframe: true,\n    opacity: 0.8\n  })\n  // add this object to the scene\n  const boxMesh = new THREE.Mesh(boxGeometry, boxMaterial)\n  scene.add(boxMesh)\n  return boxMesh\n}\n\nexport { generateTexture, drawBox }\n"]}
